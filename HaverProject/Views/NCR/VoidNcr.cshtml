@model IEnumerable<HaverProject.Models.NCR>
<!--this is void ncr page-->
@{
    ViewData["Title"] = "Index";
}


<h2 style="text-align:center">NCR Logs</h2>
<hr />

<p>
     @if (User.Identity.IsAuthenticated)
            {
        @if (User.IsInRole("Admin") || User.IsInRole("QualityInspector"))
        {
            <a asp-action="Create" class="btn btn-sm btn-outline-success"
       role="button" data-bs-toggle="tooltip"><strong>Create New</strong></a>
        }
       }

</p>
<form asp-action="Index" method="get">
    <input type="hidden" name="sortDirection" value="@ViewData["sortDirection"]" />
    <input type="hidden" name="sortField" value="@ViewData["sortField"]" />
    <div class="form-horizontal">
        <button class="btn btn-sm btn-outline-success @ViewData["Filtering"]" type="button" data-bs-toggle="collapse" id="filterToggle" data-bs-target="#collapseFilter" aria-expanded="false" aria-controls="collapseFilter">
            <strong>Filter/Search</strong> @ViewData["numberFilters"]
        </button><br />
        <div class="collapse @ViewData["ShowFilter"]" id="collapseFilter">
            <div class="card card-body bg-light">
                <div class="row">
                    <div class="form-group col-md-4">
                        <label class="control-label">NCR Number:</label>
                        <input type="text" name="searchString" value="@ViewData["SearchString"]" class="form-control" />
                    </div>
                    <div class="form-group col-md-4">
                        <label class="control-label">Date</label>
                        @Html.TextBox("Date", @ViewData["Date"], new { @class = "form-control", type = "Date" })
                    </div>
                    <div class="form-group col-md-4">
                        <label class="control-label">PO Number:</label>
                        <input type="text" name="poNumber" value="@ViewData["PONumber"]" class="form-control" />
                    </div>
                    <div class="form-group col-md-4">
                        <label class="control-label">Supplier:</label>
                        <select name="supplier" class="form-control">
                            <option value="">-- Select Supplier --</option>
                            @foreach (var item in (SelectList)ViewData["DistinctSuppliers"])
                            {
                                <option value="@item.Value">@item.Text</option>
                            }
                        </select>
                    </div>
                    <div class="form-group col-md-4">
                        <label class="control-label">Status:</label>
                        <input type="text" name="status" value="@ViewData["Status"]" class="form-control" />
                    </div>
                    <div class="form-group col-md-4 align-self-end">
                        <input type="submit" name="actionButton" value="Filter" class="btn btn-outline-primary" />
                        <a asp-action="Index" class="btn btn-outline-dark">Clear</a>
                    </div>

                </div>
            </div>
        </div>
    </div>
    <table class="table">
        <thead>
            <tr>
                <th><a asp-action="Index" asp-route-sortField="NCRNumber" asp-route-sortDirection="@ViewData["NCRNumberSortParam"]">NCR Number</a></th>
                <th><a asp-action="Index" asp-route-sortField="Date" asp-route-sortDirection="@ViewData["DateSortParam"]">Date</a></th>
                <th>PONumber</th>
                <th><a asp-action="Index" asp-route-sortField="Supplier" asp-route-sortDirection="@ViewData["SupplierSortParam"]">Supplier</a></th>
                <th>Status</th>
                <th>Void Reason</th> <!-- Added column for Void Reason -->
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                if (item.Status != "Closed" && item.Status != "Archieve")
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.NCRNumber)</td>
                        <td>@Html.DisplayFor(modelItem => item.Date)</td>
                        <td>@Html.DisplayFor(modelItem => item.PONumber)</td>
                        <td>@Html.DisplayFor(modelItem => item.Supplier.Name)</td>
                        <td>
                            @if (item.Status == "Closed")
                            {
                                <i class="fa-solid fa-circle" style="color: red;"></i>
                            }
                            else if (item.Status == "Archieve")
                            {
                                <i class="fa-solid fa-circle" style="color: darkblue;"></i>
                            }
                            else if (item.Status == "Engineering")
                            {
                                <i class="fa-solid fa-circle" style="color: orange;"></i>
                            }
                            else if (item.Status == "Purchase")
                            {
                                <i class="fa-solid fa-circle" style="color: green;"></i>
                            }
                            else if (item.Status == "Review")
                            {
                                <i class="fa-solid fa-circle" style="color: gray;"></i>
                            }
                            else if (item.Status == "Void")
                            {
                                <i class="fa-solid fa-circle" style="color: lightskyblue;"></i>
                            }
                            else @if (ViewData["reason"] != null)
                            {
                                <p>Void Reason: @ViewData["reason"]</p>
                            }
                            @Html.DisplayFor(modelItem => item.Status)
                        </td>
                        <td>@Html.DisplayFor(modelItem => item.VoidReason)</td>
                        <td>
                            @* Your existing code for action buttons *@
                            <div>
                                @if (item.Comments != null && item.Comments.Any())
                                {
                                    <strong>Comments:</strong>
                                    <ul>
                                        @foreach (var comment in item.Comments)
                                        {
                                            <li>@comment.CommentText</li>
                                        }
                                    </ul>
                                }
                            </div>
                        </td>
                        <td>
                            @if (User.Identity.IsAuthenticated)
                            {
                                @if (User.IsInRole("Admin"))
                                {
                                    <a asp-action="VoidDetails" asp-route-id="@item.ID" class="btn btn-sm btn-outline-primary" role="button" data-bs-toggle="tooltip" title="NCR Details">
                                        <i class="fa-solid fa-circle-info fa-1x"></i>
                                    </a>
                                }
                            }
                            <a asp-action="Detailspdf" asp-route-id="@item.ID" class="btn btn-sm btn-outline-primary" role="button" data-bs-toggle="tooltip" title="Generate Pdf">
                                <i class="fa-solid fa-file-pdf fa-1x"></i>
                            </a>
                            @Html.Hidden("VoidReason")

                          
                            <div class="modal fade" id="addCommentModal-@(item.ID)" tabindex="-1" aria-labelledby="addCommentModalLabel" aria-hidden="true">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <form asp-action="VoidNcrPost" method="post">
                                            <div class="modal-header">
                                                <h5 class="modal-title" id="addCommentModalLabel">Add Comment</h5>
                                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                            </div>
                                            <div class="modal-body">
                                                <div class="form-group">
                                                    <label for="commentText">Comment:</label>
                                                    <textarea class="form-control" id="commentText-@(item.ID)" rows="3"></textarea>
                                                </div>
                                                <input type="hidden" name="id" value="@item.ID" />
                                            </div>
                                            <div class="modal-footer">
                                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                                <button type="button" class="btn btn-primary" onclick="addComment('@item.ID')">Add Comment</button>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
    <a asp-action="DashBoard" asp-controller="NCR" class="btn btn-sm btn-outline-success"
       role="button" data-bs-toggle="tooltip">
        <strong>Back to Dashboard</strong>
    </a>
    <partial name="_PagingNavBar" />
</form>
@section Scripts {
    <script type="text/javascript">
        //var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        //var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
        //    return new bootstrap.Tooltip(tooltipTriggerEl)
        //})
        //function addComment(ncrId) {
        //    var commentText = $('#commentText-' + ncrId).val();
        //    var data = {
        //        VoidComment: commentText,
        //        id: ncrId
        //    };

        //    $.ajax({
        //        type: 'POST',
        //        url: '/NCR/VoidNcr',
        //        data: data,
        //        success: function (response) {
        //            // Update the UI with the new comment without reloading the page
        //            // For example, append the new comment to a comment section
        //            $('#addCommentModal-' + ncrId).modal('hide'); // Hide the modal after successful submission
        //        },
        //        error: function (xhr, status, error) {
        //            // Handle errors
        //            console.error(xhr.responseText);
        //        }
        //    });

        }
    </script>
}
